{"ast":null,"code":"var _jsxFileName = \"/Users/jererytkonen/Documents/GitHub/full-stack-open-2022/part7/bloglist/frontend/src/App.js\",\n    _s3 = $RefreshSig$();\n\n/* eslint-disable */\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport BlogForm from './components/Blogform';\nimport LoginForm from './components/LoginForm';\nimport ShowUser from './components/showUser';\nimport Togglable from './components/Togglable';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNotification } from './reducers/notificationReducer';\nimport { setBlogs } from './reducers/blogReducer';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { createBlog } from './reducers/blogReducer';\nimport { selectAllBlogs } from './reducers/blogReducer';\nimport { likeBlog, deleteBlogi } from './reducers/blogReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  //const [blogs, setBlogs] = useState([])\n  const [newTitle, setNewTitle] = useState('');\n  const [newUrl, setNewUrl] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [loginVisible, setLoginVisible] = useState(false);\n  const noteFormRef = useRef(); //EFFECT HOOKIT\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    blogService.getAll().then(() => {\n      dispatch(initializeBlogs());\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []); // FORMIT\n\n  const loginForm = () => {\n    const hideWhenVisible = {\n      display: loginVisible ? 'none' : ''\n    };\n    const showWhenVisible = {\n      display: loginVisible ? '' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: hideWhenVisible,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLoginVisible(true),\n          children: \"log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: showWhenVisible,\n        children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n          username: username,\n          password: password,\n          handleUsernameChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUsername(target.value);\n          },\n          handlePasswordChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          },\n          handleSubmit: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLoginVisible(false),\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n\n  const blogForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"new note\",\n        ref: noteFormRef,\n        children: /*#__PURE__*/_jsxDEV(BlogForm, {\n          username: username,\n          handleTitlechange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setNewTitle(target.value);\n          },\n          handleUrlchange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setNewUrl(target.value);\n          },\n          handleAuthorchange: _ref5 => {\n            let {\n              target\n            } = _ref5;\n            return setNewAuthor(target.value);\n          },\n          handleSubmit: addBlog,\n          loggedUser: loggedUser,\n          setUser: setUser,\n          newTitle: newTitle,\n          newAuthor: newAuthor,\n          newUrl: newUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLoginVisible(false),\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }; // APUFUNKTIOT\n\n\n  const addLike = id => {\n    _s();\n\n    const blogs = useSelector(selectAllBlogs);\n    const blog = blogs.find(n => n.id === id);\n    console.log(\"tässä mennään\", blog);\n    const changedBlog = { ...blog,\n      likes: blog.likes + 1\n    };\n    console.log(changedBlog);\n    dispatch(voteBlog(blog)) & dispatch(setNotification(\"you voted \" + anecdote.content, 5)).catch(error => {\n      dispatch(setNotification(`Blog '${blog.title}' was already removed from server`, 5));\n    });\n  };\n  /*\n  const deleteBlog = id => {\n    const blogs = useSelector(selectAllBlogs)\n    blogService\n      .poista(id)\n      .then(setBlogs(blogs.filter(blog => blog.id !== id)))\n  }\n  */\n\n\n  _s(addLike, \"TYHoK6W09eeJLXd0RuJrXxTEBOw=\", false, function () {\n    return [useSelector];\n  });\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(setNotification('wrong credentials', 5));\n    }\n  };\n\n  const addBlog = async event => {\n    event.preventDefault();\n    noteFormRef.current.toggleVisibility();\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: 0\n    };\n    console.log(blogObject);\n    dispatch(createBlog(blogObject));\n    setNewTitle('');\n    setNewAuthor('');\n    setNewUrl('');\n    dispatch(setNotification(`a new blog ${blogObject.title} by ${blogObject.author} was added`, 5));\n  };\n\n  const loggedUser = JSON.parse(window.localStorage.getItem('loggedBlogappUser'));\n\n  const ShowBlogs = () => {\n    _s2();\n\n    const blogs = useSelector(selectAllBlogs);\n    const sortedBlogs = [...blogs].sort((a, b) => parseFloat(b.likes) - parseFloat(a.likes));\n    return sortedBlogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog,\n      addLike: () => dispatch(likeBlog(blog)) & dispatch(setNotification(\"you voted \" + blog.title, 5)).catch(error => {\n        dispatch(setNotification(`Blog '${blog.title}' was already removed from server`, 5));\n      }),\n      deleteBlog: () => deleteBlogi(blog.id)\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this));\n  }; // RENDERÖINTI\n\n\n  _s2(ShowBlogs, \"TYHoK6W09eeJLXd0RuJrXxTEBOw=\", false, function () {\n    return [useSelector];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), user !== null ? /*#__PURE__*/_jsxDEV(ShowUser, {\n      loggedUser: loggedUser,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 80\n    }, this), user === null ? loginForm() : blogForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user ? /*#__PURE__*/_jsxDEV(ShowBlogs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(App, \"p3qHvXnYlTUXr0GWyAQH1S4HE+8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jererytkonen/Documents/GitHub/full-stack-open-2022/part7/bloglist/frontend/src/App.js"],"names":["useState","useEffect","useRef","Blog","blogService","loginService","Notification","BlogForm","LoginForm","ShowUser","Togglable","useDispatch","useSelector","setNotification","setBlogs","initializeBlogs","createBlog","selectAllBlogs","likeBlog","deleteBlogi","App","newTitle","setNewTitle","newUrl","setNewUrl","newAuthor","setNewAuthor","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","loginVisible","setLoginVisible","noteFormRef","dispatch","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","loginForm","hideWhenVisible","display","showWhenVisible","target","value","handleLogin","blogForm","addBlog","loggedUser","addLike","id","blogs","blog","find","n","console","log","changedBlog","likes","voteBlog","anecdote","content","catch","error","title","event","preventDefault","login","setItem","stringify","exception","current","toggleVisibility","blogObject","author","url","ShowBlogs","sortedBlogs","sort","a","b","parseFloat","map"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport BlogForm from './components/Blogform'\nimport LoginForm from './components/LoginForm'\nimport ShowUser from './components/showUser'\nimport Togglable from './components/Togglable'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setNotification } from './reducers/notificationReducer'\nimport { setBlogs } from './reducers/blogReducer'\nimport { initializeBlogs} from './reducers/blogReducer'\nimport { createBlog} from './reducers/blogReducer'\nimport { selectAllBlogs } from './reducers/blogReducer'\nimport { likeBlog, deleteBlogi } from './reducers/blogReducer'\n\n\n\nconst App = () => {\n  //const [blogs, setBlogs] = useState([])\n  const [newTitle, setNewTitle] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n  const noteFormRef = useRef()\n\n  //EFFECT HOOKIT\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    blogService.getAll().then(() => {\n      dispatch(initializeBlogs()) \n    })},[dispatch]) \n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  // FORMIT\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n  const blogForm = () => {\n\n    return (\n      <div>\n        <Togglable buttonLabel=\"new note\" ref={noteFormRef}>\n          <BlogForm\n            username={username}\n            handleTitlechange={({ target }) => setNewTitle(target.value)}\n            handleUrlchange={({ target }) => setNewUrl(target.value)}\n            handleAuthorchange={({ target }) => setNewAuthor(target.value)}\n            handleSubmit={addBlog}\n            loggedUser={loggedUser}\n            setUser={setUser}\n            newTitle={newTitle}\n            newAuthor={newAuthor}\n            newUrl={newUrl}\n          />\n        </Togglable>\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n    )\n  }\n\n\n\n\n  // APUFUNKTIOT\n\n  \n  const addLike = id => {\n    const blogs = useSelector(selectAllBlogs)\n    const blog = blogs.find(n => n.id === id)\n    console.log(\"tässä mennään\", blog)\n    const changedBlog = { ...blog, likes: blog.likes + 1 }\n    console.log(changedBlog)\n  \n    dispatch(voteBlog(blog)) &\n    dispatch(setNotification(\"you voted \" + anecdote.content, 5))\n      .catch(error => {\n        dispatch(setNotification(\n          `Blog '${blog.title}' was already removed from server`\n          , 5))\n        })\n  }\n\n  /*\n  const deleteBlog = id => {\n    const blogs = useSelector(selectAllBlogs)\n    blogService\n      .poista(id)\n      .then(setBlogs(blogs.filter(blog => blog.id !== id)))\n  }\n*/\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    console.log('logging in with', username, password)\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      dispatch(setNotification('wrong credentials', 5))\n    }\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    noteFormRef.current.toggleVisibility()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: 0\n    }\n    console.log(blogObject)\n\n    dispatch(createBlog(blogObject))\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n    dispatch(setNotification(`a new blog ${blogObject.title} by ${blogObject.author} was added`, 5))\n  }\n\n\n  const loggedUser = JSON.parse(window.localStorage.getItem('loggedBlogappUser'))\n\n  const ShowBlogs = () => {\n    const blogs = useSelector(selectAllBlogs)\n    const sortedBlogs = [...blogs].sort((a, b) => parseFloat(b.likes) - parseFloat(a.likes))\n    return ( sortedBlogs.map(blog =>\n      <Blog key={blog.id} blog={blog} \n      addLike={() =>    \n        dispatch(likeBlog(blog)) &\n        dispatch(setNotification(\"you voted \" + blog.title, 5))\n          .catch(error => {\n            dispatch(setNotification(\n              `Blog '${blog.title}' was already removed from server`\n              , 5))\n            })} \n      deleteBlog={() => deleteBlogi(blog.id)} />\n    ))\n  }\n\n  // RENDERÖINTI\n\n\n  return (\n    <div>\n      <div>\n        <h1>blogs</h1>\n      </div>\n      <Notification />\n      {user !== null ? <ShowUser loggedUser={loggedUser} setUser={setUser}/> : <p></p> }\n      {user === null ?\n        loginForm() :\n        blogForm()\n      }\n      <div>\n        { user ? <ShowBlogs />\n         : <p></p> }\n      </div>\n\n\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}