{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport blogsService from '../services/blogs';\nconst blogSlice = createSlice({\n  name: 'blogs',\n  initialState: [],\n  reducers: {\n    like(state, action) {\n      const id = action.payload.id;\n      const blogFind = state.find(n => n.id === id);\n      const likeAdded = { ...blogFind,\n        likes: blogFind.likes + 1\n      };\n      return state.map(blog => blog.id !== id ? blog : likeAdded);\n    },\n\n    appendBlog(state, action) {\n      state.push(action.payload);\n    },\n\n    setBlogs(state, action) {\n      return action.payload;\n    },\n\n    setBlogs2(state, action) {\n      return action.payload;\n    },\n\n    poistaBlog(state, action) {\n      const id = action.payload.id;\n      return state.filter(blog => blog.id !== id);\n    }\n\n  }\n});\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogsService.getAll();\n    dispatch(setBlogs(blogs));\n  };\n};\nexport const selectAllBlogs = state => state.blogs;\nexport const createBlog = content => {\n  return async dispatch => {\n    const newBlog = await blogsService.create(content);\n    dispatch(appendBlog(newBlog));\n  };\n};\nexport const likeBlog = id => {\n  return async dispatch => {\n    const votable = await blogsService.addLike(id);\n    dispatch(like(votable));\n  };\n};\nexport const deleteBlog = id => {\n  return async dispatch => {\n    const votable = await blogsService.poista(id);\n    dispatch(setBlogs2(votable));\n  };\n};\nexport const {\n  setBlogs,\n  like,\n  appendBlog\n} = blogSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"sources":["/Users/jererytkonen/Documents/GitHub/full-stack-open-2022/part7/bloglist/frontend/src/reducers/blogReducer.js"],"names":["createSlice","blogsService","blogSlice","name","initialState","reducers","like","state","action","id","payload","blogFind","find","n","likeAdded","likes","map","blog","appendBlog","push","setBlogs","setBlogs2","poistaBlog","filter","initializeBlogs","dispatch","blogs","getAll","selectAllBlogs","createBlog","content","newBlog","create","likeBlog","votable","addLike","deleteBlog","poista","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogsService from '../services/blogs'\n\n\nconst blogSlice = createSlice ({\n  name: 'blogs',\n  initialState: [],\n  reducers: {\n\n    like(state, action) {\n      const id = action.payload.id\n      const blogFind = state.find(n => n.id === id)\n      const likeAdded = {\n        ...blogFind, likes: blogFind.likes + 1\n      }\n      return state.map(blog =>\n        (blog.id !== id ? blog : likeAdded )\n      )\n    },\n    appendBlog(state, action) {\n      state.push(action.payload)\n    },\n    setBlogs(state, action) {\n      return action.payload\n    },\n    setBlogs2(state, action) {\n        return action.payload\n      },\n    poistaBlog(state, action) {\n        const id = action.payload.id\n        return state.filter(blog =>\n            blog.id !== id\n          )\n    }\n  }\n})\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogsService.getAll()\n    dispatch(setBlogs(blogs))\n  }\n}\n\nexport const selectAllBlogs = state =>  state.blogs\n\nexport const createBlog = content => {\n  return async dispatch => {\n    const newBlog = await blogsService.create(content)\n    dispatch(appendBlog(newBlog))\n  }\n}\n\nexport const likeBlog = (id) => {\n  return async dispatch => {\n    const votable = await blogsService.addLike(id)\n    dispatch(like(votable))\n  }\n}\n\nexport const deleteBlog = (id) => {\n    return async dispatch => {\n      const votable = await blogsService.poista(id)\n      dispatch(setBlogs2(votable))\n    }\n  }\n\n\n\nexport const { setBlogs, like, appendBlog} = blogSlice.actions\nexport default blogSlice.reducer"]},"metadata":{},"sourceType":"module"}