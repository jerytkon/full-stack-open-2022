{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config);\n  return response.data;\n};\n\nconst addLike = async object => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const newObject = { ...object,\n    likes: object.likes + 1\n  };\n  const response = await axios.put(`${baseUrl}/${object.id}`, newObject, config);\n  return newObject;\n};\n\nconst poista = async object => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${object.id}`, config);\n  return response.data;\n};\n\nconsole.log('hello world');\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  poista,\n  addLike\n};","map":{"version":3,"sources":["/Users/jererytkonen/Documents/GitHub/full-stack-open-2022/part7/bloglist/frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","update","id","put","addLike","object","likes","poista","delete","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,SAAN,IAAmB;AAChC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAIA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAPD;;AASA,MAAMO,MAAM,GAAG,OAAOC,EAAP,EAAWN,SAAX,KAAyB;AACtC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,IAAGiB,EAAG,EAA3B,EAA8BN,SAA9B,EAAyCC,MAAzC,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,MAAMU,OAAO,GAAG,MAAOC,MAAP,IAAkB;AAChC,QAAMR,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMU,SAAS,GAAG,EAAE,GAAGS,MAAL;AAAaC,IAAAA,KAAK,EAAED,MAAM,CAACC,KAAP,GAAe;AAAnC,GAAlB;AACA,QAAMb,QAAQ,GAAG,MAAMT,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,IAAGoB,MAAM,CAACH,EAAG,EAAlC,EAAqCN,SAArC,EAAgDC,MAAhD,CAAvB;AACA,SAAOD,SAAP;AACD,CAPD;;AASA,MAAMW,MAAM,GAAG,MAAOF,MAAP,IAAkB;AAC/B,QAAMR,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACwB,MAAN,CAAc,GAAEvB,OAAQ,IAAGoB,MAAM,CAACH,EAAG,EAArC,EAAwCL,MAAxC,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AAWAe,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,eAAe;AAAErB,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBR,EAAAA,QAAlB;AAA4Bc,EAAAA,MAA5B;AAAoCM,EAAAA,MAApC;AAA4CH,EAAAA;AAA5C,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\nconst addLike = async (object) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const newObject = { ...object, likes: object.likes + 1 }\n  const response = await axios.put(`${baseUrl}/${object.id}`, newObject, config )\n  return newObject\n}\n\nconst poista = async (object) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${object.id}`, config)\n  return response.data\n}\n\n\n\n\nconsole.log('hello world')\n\nexport default { getAll, create, setToken, update, poista, addLike}"]},"metadata":{},"sourceType":"module"}