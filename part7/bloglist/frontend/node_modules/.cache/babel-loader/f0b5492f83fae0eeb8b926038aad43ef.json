{"ast":null,"code":"var _jsxFileName = \"/Users/jererytkonen/Documents/programming/full-stack-open-2022/part5/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport BlogForm from './components/Blogform';\nimport LoginForm from './components/LoginForm';\nimport ShowUser from './components/showUser';\nimport Togglable from './components/Togglable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newUrl, setNewUrl] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [loginVisible, setLoginVisible] = useState(false);\n  const noteFormRef = useRef(); //EFFECT HOOKIT\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []); // FORMIT\n\n  const loginForm = () => {\n    const hideWhenVisible = {\n      display: loginVisible ? 'none' : ''\n    };\n    const showWhenVisible = {\n      display: loginVisible ? '' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: hideWhenVisible,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLoginVisible(true),\n          children: \"log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: showWhenVisible,\n        children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n          username: username,\n          password: password,\n          handleUsernameChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUsername(target.value);\n          },\n          handlePasswordChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          },\n          handleSubmit: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLoginVisible(false),\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n\n  const blogForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"new note\",\n        ref: noteFormRef,\n        children: /*#__PURE__*/_jsxDEV(BlogForm, {\n          username: username,\n          handleTitlechange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setNewTitle(target.value);\n          },\n          handleUrlchange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setNewUrl(target.value);\n          },\n          handleAuthorchange: _ref5 => {\n            let {\n              target\n            } = _ref5;\n            return setNewAuthor(target.value);\n          },\n          handleSubmit: addBlog,\n          loggedUser: loggedUser,\n          setUser: setUser,\n          newTitle: newTitle,\n          newAuthor: newAuthor,\n          newUrl: newUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLoginVisible(false),\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }; // APUFUNKTIOT\n\n\n  const addLike = id => {\n    const blog = blogs.find(n => n.id === id);\n    console.log(\"tässä mennään\", blog);\n    const changedBlog = { ...blog,\n      likes: blog.likes += 1\n    };\n    blogService.update(id, changedBlog).then(returnedBlog => {\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog));\n    }).catch(error => {\n      setErrorMessage(`Blog '${blog.title}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setBlogs(blogs.find({}));\n    });\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const addBlog = event => {\n    event.preventDefault();\n    noteFormRef.current.toggleVisibility();\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: 0\n    };\n    console.log(blogObject);\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setNewTitle('');\n      setNewAuthor('');\n      setNewUrl('');\n    });\n  };\n\n  const loggedUser = JSON.parse(window.localStorage.getItem('loggedBlogappUser')); // RENDERÖINTI\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), user !== null ? /*#__PURE__*/_jsxDEV(ShowUser, {\n      loggedUser: loggedUser,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 80\n    }, this), user === null ? loginForm() : blogForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user ? blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        addLike: () => addLike(blog.id)\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/m/J0ZK40op9LdLwX31mTWzXRr0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jererytkonen/Documents/programming/full-stack-open-2022/part5/src/App.js"],"names":["useState","useEffect","useRef","Blog","blogService","loginService","Notification","BlogForm","LoginForm","ShowUser","Togglable","App","blogs","setBlogs","newTitle","setNewTitle","newUrl","setNewUrl","newAuthor","setNewAuthor","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","loginVisible","setLoginVisible","noteFormRef","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","loginForm","hideWhenVisible","display","showWhenVisible","target","value","handleLogin","blogForm","addBlog","loggedUser","addLike","id","blog","find","n","console","log","changedBlog","likes","update","returnedBlog","map","catch","error","title","setTimeout","event","preventDefault","login","setItem","stringify","exception","current","toggleVisibility","blogObject","author","url","create","concat"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport BlogForm from './components/Blogform'\nimport LoginForm from './components/LoginForm'\nimport ShowUser from './components/showUser'\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [newTitle, setNewTitle] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n  const noteFormRef = useRef()\n\n  //EFFECT HOOKIT\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  // FORMIT\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n  const blogForm = () => {\n\n    return (\n      <div>\n        <Togglable buttonLabel=\"new note\" ref={noteFormRef}>\n          <BlogForm\n            username={username}\n            handleTitlechange={({ target }) => setNewTitle(target.value)}\n            handleUrlchange={({ target }) => setNewUrl(target.value)}\n            handleAuthorchange={({ target }) => setNewAuthor(target.value)}\n            handleSubmit={addBlog}\n            loggedUser={loggedUser}\n            setUser={setUser}\n            newTitle={newTitle}\n            newAuthor={newAuthor}\n            newUrl={newUrl}\n          />\n        </Togglable>\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n    )\n  }\n\n\n\n\n  // APUFUNKTIOT\n\n  const addLike = id => {\n    const blog = blogs.find(n => n.id === id)\n    console.log(\"tässä mennään\", blog)\n    const changedBlog = { ...blog, likes: blog.likes += 1 }\n  \n    blogService\n      .update(id, changedBlog)\n      .then(returnedBlog => {\n        setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Blog '${blog.title}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setBlogs(blogs.find({}))\n      })\n  }\n\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    console.log('logging in with', username, password)\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    noteFormRef.current.toggleVisibility()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: 0\n    }\n    console.log(blogObject)\n\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setNewTitle('')\n        setNewAuthor('')\n        setNewUrl('')\n      })\n  }\n\n\n  const loggedUser = JSON.parse(window.localStorage.getItem('loggedBlogappUser'))\n\n  // RENDERÖINTI\n\n\n  return (\n    <div>\n      <div>\n        <h1>blogs</h1>\n      </div>\n      <Notification message={errorMessage} />\n      {user !== null ? <ShowUser loggedUser={loggedUser} setUser={setUser}/> : <p></p> }\n      {user === null ?\n        loginForm() :\n        blogForm()\n      }\n      <div>\n        { user ? (blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} \n          addLike={() => addLike(blog.id)} />\n        )) : <p></p> }\n      </div>\n\n\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}